@model Pizzeria.Models.Prodotto

@{
    ViewData["Title"] = "Create";
}
<div class="divform">
<h1>Create</h1>

<h4>Prodotto</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="NomeProdotto" class="control-label"></label>
                <input asp-for="NomeProdotto" class="form-control" />
                <span asp-validation-for="NomeProdotto" class="text-danger"></span>
            </div>
            <div class="d-flex">
                <div class="form-group me-5">
                    <label asp-for="IngredientiAggiunti" class="control-label"></label>
                    <select asp-for="IngredientiAggiunti" asp-items="@(new MultiSelectList(ViewBag.ListaIngredienti, "IdIngrediente", "NomeIngrediente"))" class="form-control" multiple></select>
                </div>
                <div id="listaIngredientiScelti">
                </div>
            </div>
            <div class="form-group">
                <label asp-for="ImgProdotto" class="control-label"></label>
                <input asp-for="ImgProdotto" class="form-control" />
                <span asp-validation-for="ImgProdotto" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PrezzoProdotto" class="control-label"></label>
                <input asp-for="PrezzoProdotto" class="form-control" />
                <span asp-validation-for="PrezzoProdotto" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TempoConsegna" class="control-label"></label>
                <input asp-for="TempoConsegna" class="form-control" />
                <span asp-validation-for="TempoConsegna" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="IngredientiAggiuntiHidden" id="IngredientiAggiuntiHidden" name="IngredientiAggiuntiHidden" value="" />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>



<div>
    <a asp-action="Index">Back to List</a>
</div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {

            let selectedObject = [];
            let selectedIds = [];

            $("#IngredientiAggiunti").change(function () {
                var selected = $(this).find('option:selected');
                selected.each(function () {
                    if (selectedIds.includes($(this).val())) {
                        return;
                    }
                    else {
                        let obj = {
                            id: $(this).val(),
                            nome: $(this).text()
                        }
                        selectedObject.push(obj);
                        selectedIds.push($(this).val());
                        console.log(selectedObject);
                    }
                });
                $("#listaIngredientiScelti").empty();
                $.each(selectedObject, function (index, obj) {
                    let divElement = createSelected(obj);

                    $("#listaIngredientiScelti").append(divElement);
                });
                $("#IngredientiAggiuntiHidden").val(selectedIds);

            });

            function removeFromSelected(id) {
                selectedObject = selectedObject.filter(function (obj) {
                    return obj.id !== id;
                });
                selectedIds = filterValues(selectedIds, id);

                $("#listaIngredientiScelti").empty();
                $.each(selectedObject, function (index, obj) {
                    let divElement = createSelected(obj);
                    $("#listaIngredientiScelti").append(divElement);
                });

                $("#IngredientiAggiuntiHidden").val(selectedIds);
            }

            function createSelected(obj) {
                let divElement = document.createElement("div");
                divElement.classList.add("d-flex");

                let paragraphElement = document.createElement("p");
                paragraphElement.classList.add("me-3");
                paragraphElement.classList.add("mb-0");
                paragraphElement.textContent = obj.nome;

                let spanElement = document.createElement("span");
                spanElement.style.color = "red";
                spanElement.textContent = "X";
                spanElement.style.cursor = "pointer";
                spanElement.onclick = function () {
                    removeFromSelected(obj.id);
                }

                divElement.appendChild(paragraphElement);
                divElement.appendChild(spanElement);

                return divElement;
            }

            function filterValues(values, id) {
                let filteredValues = [];
                for (let i = 0; i < values.length; i++) {
                    if (values[i] !== id) {
                        filteredValues.push(values[i]);
                    }
                }
                return filteredValues;
            }
        });
    </script>

}
